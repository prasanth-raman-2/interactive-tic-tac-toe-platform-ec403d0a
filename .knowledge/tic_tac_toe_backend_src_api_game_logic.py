{"is_source_file": true, "format": "Python", "description": "This file contains the game logic for a tic-tac-toe backend, including functions to check the winner, validate moves, and manage game state.", "external_files": ["./models"], "external_methods": ["GameStatus", "PlayerSymbol"], "published": ["check_winner", "is_board_full", "get_game_status", "validate_move", "make_move", "get_next_player"], "classes": [], "methods": [{"name": "Optional[str] check_winner(board: List[Optional[str]])", "description": "Checks the board for a winner by evaluating possible winning combinations.", "scope": "", "scopeKind": ""}, {"name": "bool is_board_full(board: List[Optional[str]])", "description": "Validates if the board is full without any empty cells.", "scope": "", "scopeKind": ""}, {"name": "GameStatus get_game_status(board: List[Optional[str]])", "description": "Determines the current status of the game based on the board state.", "scope": "", "scopeKind": ""}, {"name": "bool validate_move(board: List[Optional[str]], position: int, current_player: PlayerSymbol)", "description": "Checks if a move is valid based on the current board and position.", "scope": "", "scopeKind": ""}, {"name": "List[Optional[str]] make_move(board: List[Optional[str]], position: int, symbol: PlayerSymbol)", "description": "Updates the board with the player's symbol at the specified position.", "scope": "", "scopeKind": ""}, {"name": "PlayerSymbol get_next_player(current_player: PlayerSymbol)", "description": "Determines the next player based on the current player's symbol.", "scope": "", "scopeKind": ""}], "calls": [], "search-terms": ["tic-tac-toe", "game logic", "winner check", "validate move", "player management"], "state": 2, "file_id": 7, "knowledge_revision": 20, "git_revision": "", "revision_history": [{"15": ""}, {"20": ""}], "ctags": [{"_type": "tag", "name": "check_winner", "path": "/tmp/kavia/workspace/code-generation/interactive-tic-tac-toe-platform-ec403d0a/tic_tac_toe_backend/src/api/game_logic.py", "pattern": "/^def check_winner(board: List[Optional[str]]) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "(board: List[Optional[str]])"}, {"_type": "tag", "name": "get_game_status", "path": "/tmp/kavia/workspace/code-generation/interactive-tic-tac-toe-platform-ec403d0a/tic_tac_toe_backend/src/api/game_logic.py", "pattern": "/^def get_game_status(board: List[Optional[str]]) -> GameStatus:$/", "language": "Python", "typeref": "typename:GameStatus", "kind": "function", "signature": "(board: List[Optional[str]])"}, {"_type": "tag", "name": "get_next_player", "path": "/tmp/kavia/workspace/code-generation/interactive-tic-tac-toe-platform-ec403d0a/tic_tac_toe_backend/src/api/game_logic.py", "pattern": "/^def get_next_player(current_player: PlayerSymbol) -> PlayerSymbol:$/", "language": "Python", "typeref": "typename:PlayerSymbol", "kind": "function", "signature": "(current_player: PlayerSymbol)"}, {"_type": "tag", "name": "is_board_full", "path": "/tmp/kavia/workspace/code-generation/interactive-tic-tac-toe-platform-ec403d0a/tic_tac_toe_backend/src/api/game_logic.py", "pattern": "/^def is_board_full(board: List[Optional[str]]) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(board: List[Optional[str]])"}, {"_type": "tag", "name": "make_move", "path": "/tmp/kavia/workspace/code-generation/interactive-tic-tac-toe-platform-ec403d0a/tic_tac_toe_backend/src/api/game_logic.py", "pattern": "/^def make_move(board: List[Optional[str]], position: int, symbol: PlayerSymbol) -> List[Optional[/", "language": "Python", "typeref": "typename:List[Optional[str]]", "kind": "function", "signature": "(board: List[Optional[str]], position: int, symbol: PlayerSymbol)"}, {"_type": "tag", "name": "validate_move", "path": "/tmp/kavia/workspace/code-generation/interactive-tic-tac-toe-platform-ec403d0a/tic_tac_toe_backend/src/api/game_logic.py", "pattern": "/^def validate_move(board: List[Optional[str]], position: int, current_player: PlayerSymbol) -> bo/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(board: List[Optional[str]], position: int, current_player: PlayerSymbol)"}], "hash": "0d3f983983af8c6e27cdbd7747988788", "format-version": 4, "code-base-name": "tic_tac_toe_backend", "filename": "tic_tac_toe_backend/src/api/game_logic.py"}