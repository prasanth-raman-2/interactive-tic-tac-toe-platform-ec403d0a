{"is_source_file": true, "format": "Python", "description": "Main entry point for the Tic Tac Toe API backend, providing endpoints for user registration, login, and game management.", "external_files": ["models", "database", "auth", "game_logic", "database_connection"], "external_methods": ["auth.get_db", "auth.get_password_hash", "auth.authenticate_user", "auth.create_access_token", "auth.get_current_user", "game_logic.validate_move", "game_logic.make_move", "game_logic.get_game_status", "game_logic.get_next_player"], "published": ["register_user", "login", "create_game", "list_games", "get_game", "make_move", "health_check"], "classes": [], "methods": [{"name": "register_user(user: models.UserCreate, db: Session = Depends(auth.get_db))", "description": "Handles user registration and creates a new user in the database.", "scope": "", "scopeKind": ""}, {"name": "login( form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(auth.get_db) )", "description": "Authenticates a user and returns an access token.", "scope": "", "scopeKind": ""}, {"name": "create_game( game_create: models.GameCreate, current_user: database.User = Depends(auth.get_current_user), db: Session = Depends(auth.get_db) )", "description": "Creates a new game and links it to the current user and an opponent.", "scope": "", "scopeKind": ""}, {"name": "list_games( current_user: database.User = Depends(auth.get_current_user), db: Session = Depends(auth.get_db) )", "description": "Retrieves a list of all games associated with the current user.", "scope": "", "scopeKind": ""}, {"name": "get_game( game_id: int, current_user: database.User = Depends(auth.get_current_user), db: Session = Depends(auth.get_db) )", "description": "Fetches details of a specific game by ID.", "scope": "", "scopeKind": ""}, {"name": "make_move( game_id: int, move: models.GameMove, current_user: database.User = Depends(auth.get_current_user), db: Session = Depends(auth.get_db) )", "description": "Processes a player's move in the game and updates the game status.", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Provides a simple health check endpoint.", "scope": "", "scopeKind": ""}], "calls": ["db.query(database.User).filter", "db.add", "db.commit", "db.refresh", "db.query(database.Game).filter", "db.query(database.Game).first"], "search-terms": ["Tic Tac Toe API", "user registration", "game management", "fastapi"], "state": 2, "file_id": 2, "knowledge_revision": 18, "git_revision": "c8020582159536a138a5f8fc87582c01705c9ff7", "revision_history": [{"7": "c8020582159536a138a5f8fc87582c01705c9ff7"}, {"18": "c8020582159536a138a5f8fc87582c01705c9ff7"}], "ctags": [{"_type": "tag", "name": "app", "path": "/tmp/kavia/workspace/code-generation/interactive-tic-tac-toe-platform-ec403d0a/tic_tac_toe_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_game", "path": "/tmp/kavia/workspace/code-generation/interactive-tic-tac-toe-platform-ec403d0a/tic_tac_toe_backend/src/api/main.py", "pattern": "/^async def create_game($/", "language": "Python", "kind": "function", "signature": "( game_create: models.GameCreate, current_user: database.User = Depends(auth.get_current_user), db: Session = Depends(auth.get_db) )"}, {"_type": "tag", "name": "get_game", "path": "/tmp/kavia/workspace/code-generation/interactive-tic-tac-toe-platform-ec403d0a/tic_tac_toe_backend/src/api/main.py", "pattern": "/^async def get_game($/", "language": "Python", "kind": "function", "signature": "( game_id: int, current_user: database.User = Depends(auth.get_current_user), db: Session = Depends(auth.get_db) )"}, {"_type": "tag", "name": "health_check", "path": "/tmp/kavia/workspace/code-generation/interactive-tic-tac-toe-platform-ec403d0a/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_games", "path": "/tmp/kavia/workspace/code-generation/interactive-tic-tac-toe-platform-ec403d0a/tic_tac_toe_backend/src/api/main.py", "pattern": "/^async def list_games($/", "language": "Python", "kind": "function", "signature": "( current_user: database.User = Depends(auth.get_current_user), db: Session = Depends(auth.get_db) )"}, {"_type": "tag", "name": "login", "path": "/tmp/kavia/workspace/code-generation/interactive-tic-tac-toe-platform-ec403d0a/tic_tac_toe_backend/src/api/main.py", "pattern": "/^async def login($/", "language": "Python", "kind": "function", "signature": "( form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(auth.get_db) )"}, {"_type": "tag", "name": "make_move", "path": "/tmp/kavia/workspace/code-generation/interactive-tic-tac-toe-platform-ec403d0a/tic_tac_toe_backend/src/api/main.py", "pattern": "/^async def make_move($/", "language": "Python", "kind": "function", "signature": "( game_id: int, move: models.GameMove, current_user: database.User = Depends(auth.get_current_user), db: Session = Depends(auth.get_db) )"}, {"_type": "tag", "name": "register_user", "path": "/tmp/kavia/workspace/code-generation/interactive-tic-tac-toe-platform-ec403d0a/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def register_user(user: models.UserCreate, db: Session = Depends(auth.get_db)):$/", "language": "Python", "kind": "function", "signature": "(user: models.UserCreate, db: Session = Depends(auth.get_db))"}], "hash": "32a60182ed31ddbf28bc810c515792ea", "format-version": 4, "code-base-name": "tic_tac_toe_backend", "filename": "tic_tac_toe_backend/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}]}